
import random


def print_board(board):
    print('\n'.join([' '.join(row) for row in board]))
    print()


def check_winner(board, mark):
    # Check rows, columns and diagonals
    win_conditions = [
        [board[0][0], board[0][1], board[0][2]],  # row 1
        [board[1][0], board[1][1], board[1][2]],  # row 2
        [board[2][0], board[2][1], board[2][2]],  # row 3
        [board[0][0], board[1][0], board[2][0]],  # col 1
        [board[0][1], board[1][1], board[2][1]],  # col 2
        [board[0][2], board[1][2], board[2][2]],  # col 3
        [board[0][0], board[1][1], board[2][2]],  # diagonal 1
        [board[2][0], board[1][1], board[0][2]]  # diagonal 2
    ]
    return [mark, mark, mark] in win_conditions


def get_available_moves(board):
    return [(r, c) for r in range(3) for c in range(3) if board[r][c] == ' ']


def make_move(board, row, col, mark):
    if board[row][col] == ' ':
        board[row][col] = mark
        return True
    return False


def computer_move(board):
    return random.choice(get_available_moves(board))


def tic_tac_toe():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    player_mark = 'X'
    computer_mark = 'O'

    for turn in range(9):
        print_board(board)

        if turn % 2 == 0:  # Player's turn
            try:
                row, col = map(int, input("Enter your move (row and column): ").split())
                if not make_move(board, row, col, player_mark):
                    print("Invalid move. Try again.")
                    continue
            except (ValueError, IndexError):
                print("Invalid input. Use row and column numbers separated by a space.")
                continue
        else:  # Computer's turn
            row, col = computer_move(board)
            make_move(board, row, col, computer_mark)
            print(f"Computer placed '{computer_mark}' at ({row}, {col})")

        if check_winner(board, player_mark):
            print_board(board)
            print("Congratulations! You win!")
            return
        if check_winner(board, computer_mark):
            print_board(board)
            print("Computer wins! Better luck next time.")
            return

    print_board(board)
    print("It's a draw!")


if __name__ == "__main__":
    tic_tac_toe()
